-- MySQL Script generated by MySQL Workbench
-- Wed Nov 29 11:00:23 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema pssdb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema pssdb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `pssdb` DEFAULT CHARACTER SET utf8 ;
USE `pssdb` ;

-- -----------------------------------------------------
-- Table `pssdb`.`usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pssdb`.`usuario` ;

CREATE TABLE IF NOT EXISTS `pssdb`.`usuario` (
  `id_usuario` INT NOT NULL,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `cpf` VARCHAR(15) NOT NULL,
  `telefone` VARCHAR(20) NOT NULL,
  `devedor` VARCHAR(1) NOT NULL,
  PRIMARY KEY (`id_usuario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pssdb`.`tipo_produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pssdb`.`tipo_produto` ;

CREATE TABLE IF NOT EXISTS `pssdb`.`tipo_produto` (
  `id_tipo_produto` INT NOT NULL,
  `nome_tipo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_tipo_produto`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pssdb`.`produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pssdb`.`produto` ;

CREATE TABLE IF NOT EXISTS `pssdb`.`produto` (
  `id_produto` INT NOT NULL,
  `nome_produto` VARCHAR(45) NOT NULL,
  `preco` DOUBLE NOT NULL,
  `desconto` DOUBLE NULL,
  `id_tipo_produto` INT NOT NULL,
  PRIMARY KEY (`id_produto`),
  CONSTRAINT `fk_produto_tipo_produto`
    FOREIGN KEY (`id_tipo_produto`)
    REFERENCES `pssdb`.`tipo_produto` (`id_tipo_produto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `pssdb`.`tipo_pagamento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pssdb`.`tipo_pagamento` ;

CREATE TABLE IF NOT EXISTS `pssdb`.`tipo_pagamento` (
  `id_tipo_pagamento` INT NOT NULL,
  `nome_tipo_pagamento` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id_tipo_pagamento`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pssdb`.`atracao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pssdb`.`atracao` ;

CREATE TABLE IF NOT EXISTS `pssdb`.`atracao` (
  `id_atracao` INT NOT NULL,
  `descricao` VARCHAR(45) NULL,
  `preco` DOUBLE NOT NULL,
  PRIMARY KEY (`id_atracao`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pssdb`.`nota_fiscal`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pssdb`.`nota_fiscal` ;

CREATE TABLE IF NOT EXISTS `pssdb`.`nota_fiscal` (
  `id_nota_fiscal` INT NOT NULL,
  `preco_total` DOUBLE NOT NULL,
  `data` DATE NOT NULL,
  `id_tipo_pagamento` INT NOT NULL,
  `id_atracao` INT NOT NULL,
  `id_usuario` INT NOT NULL,
  PRIMARY KEY (`id_nota_fiscal`),
  CONSTRAINT `fk_nota_fiscal_tipo_pagamento1`
    FOREIGN KEY (`id_tipo_pagamento`)
    REFERENCES `pssdb`.`tipo_pagamento` (`id_tipo_pagamento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_nota_fiscal_atracao1`
    FOREIGN KEY (`id_atracao`)
    REFERENCES `pssdb`.`atracao` (`id_atracao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_nota_fiscal_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `pssdb`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pssdb`.`item_pedido`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pssdb`.`item_pedido` ;

CREATE TABLE IF NOT EXISTS `pssdb`.`item_pedido` (
  `id_produto` INT NOT NULL,
  `id_nota_fiscal` INT NOT NULL,
  `quantidade` INT NOT NULL,
  PRIMARY KEY (`id_produto`, `id_nota_fiscal`),
  CONSTRAINT `fk_item_pedido_produto1`
    FOREIGN KEY (`id_produto`)
    REFERENCES `pssdb`.`produto` (`id_produto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_item_pedido_nota_fiscal1`
    FOREIGN KEY (`id_nota_fiscal`)
    REFERENCES `pssdb`.`nota_fiscal` (`id_nota_fiscal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `pssdb`.`usuario`
-- -----------------------------------------------------
START TRANSACTION;
USE `pssdb`;
INSERT INTO `pssdb`.`usuario` (`id_usuario`, `first_name`, `last_name`, `cpf`, `telefone`, `devedor`) VALUES (1, 'Marcelo', 'Araujo', '123.123.123-12', '(16) 1234-1234', 'N');
INSERT INTO `pssdb`.`usuario` (`id_usuario`, `first_name`, `last_name`, `cpf`, `telefone`, `devedor`) VALUES (2, 'Sara', 'Dur√°n', '321.321.321-32', '(16) 4321-4321', 'S');

COMMIT;


-- -----------------------------------------------------
-- Data for table `pssdb`.`tipo_produto`
-- -----------------------------------------------------
START TRANSACTION;
USE `pssdb`;
INSERT INTO `pssdb`.`tipo_produto` (`id_tipo_produto`, `nome_tipo`) VALUES (1, 'ATRACAO');
INSERT INTO `pssdb`.`tipo_produto` (`id_tipo_produto`, `nome_tipo`) VALUES (2, 'PORCAO');
INSERT INTO `pssdb`.`tipo_produto` (`id_tipo_produto`, `nome_tipo`) VALUES (3, 'BEBIDA');

COMMIT;


-- -----------------------------------------------------
-- Data for table `pssdb`.`produto`
-- -----------------------------------------------------
START TRANSACTION;
USE `pssdb`;
INSERT INTO `pssdb`.`produto` (`id_produto`, `nome_produto`, `preco`, `desconto`, `id_tipo_produto`) VALUES (1, 'COVER', 20.00, 0, 1);
INSERT INTO `pssdb`.`produto` (`id_produto`, `nome_produto`, `preco`, `desconto`, `id_tipo_produto`) VALUES (2, ' BATATA', 25.00, 0, 2);
INSERT INTO `pssdb`.`produto` (`id_produto`, `nome_produto`, `preco`, `desconto`, `id_tipo_produto`) VALUES (3, 'COCA COLA 2L', 12.00, 0, 3);

COMMIT;


-- -----------------------------------------------------
-- Data for table `pssdb`.`tipo_pagamento`
-- -----------------------------------------------------
START TRANSACTION;
USE `pssdb`;
INSERT INTO `pssdb`.`tipo_pagamento` (`id_tipo_pagamento`, `nome_tipo_pagamento`) VALUES (1, 'CREDITO');
INSERT INTO `pssdb`.`tipo_pagamento` (`id_tipo_pagamento`, `nome_tipo_pagamento`) VALUES (2, 'DEBITO');

COMMIT;


-- -----------------------------------------------------
-- Data for table `pssdb`.`nota_fiscal`
-- -----------------------------------------------------
START TRANSACTION;
USE `pssdb`;
-- INSERT INTO `pssdb`.`nota_fiscal` (`id_nota_fiscal`, `preco_total`, `data`, `id_tipo_pagamento`, `id_atracao`, `id_usuario`) VALUES (1, 1000, '2023/01/01', 1, 1, 1);
-- INSERT INTO `pssdb`.`nota_fiscal` (`id_nota_fiscal`, `preco_total`, `data`, `id_tipo_pagamento`, `id_atracao`, `id_usuario`) VALUES (2, 1000, '2023/01/01', 2, 2, 2);

COMMIT;

SELECT * FROM item_pedido; -- id produto | id  nf | qtd
select * from produto; -- id prod | nome | preco | desconto | id tipo prod |
select * from tipo_produto; -- id tp prod | nome | 1 atrac 2 porcao 3 bebida
select * from nota_fiscal; -- id nf | preco total | data | tipo pgto|  id atrac | id usu

-- -----------------------------------------------------
-- Data for table `pssdb`.`item_pedido`
-- -----------------------------------------------------
START TRANSACTION;
USE `pssdb`;
INSERT INTO `pssdb`.`item_pedido` (`id_produto`, `id_nota_fiscal`, `quantidade`) VALUES (1, 1, 1);
INSERT INTO `pssdb`.`item_pedido` (`id_produto`, `id_nota_fiscal`, `quantidade`) VALUES (2, 2, 3);

COMMIT;

